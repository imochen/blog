<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[普通的前端小站]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="https://imochen.com/"/>
  <updated>2015-12-21T07:03:15.000Z</updated>
  <id>https://imochen.com/</id>
  
  <author>
    <name><![CDATA[墨尘/*V5*/]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[但是经过测试之后发现作者并没有那么讲究]]></title>
    <link href="https://imochen.com/2015/12/20/test/"/>
    <id>https://imochen.com/2015/12/20/test/</id>
    <published>2015-12-20T07:33:31.000Z</published>
    <updated>2015-12-21T07:03:15.000Z</updated>
    <content type="html"><![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>为了解决属性能直接被访问的问题，我们可以将变量私有化。私有化方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Privatization</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">//搞个uid作为不同实例化对象的标示，没有什么实际意义，区分之用。</span></span><br><span class="line">       <span class="keyword">var</span> uid = (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()).toString().slice(<span class="number">0</span>,<span class="number">7</span>);</span><br><span class="line">		<span class="comment">//创建一个对象用来存在私有属性/方法等内容。</span></span><br><span class="line">       <span class="keyword">var</span> privateData = &#123;&#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//由于存在于闭包中，需要一个销毁方法。</span></span><br><span class="line">       <span class="keyword">var</span> destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       	<span class="keyword">for</span>( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">      			<span class="keyword">if</span>( privateData[key] === <span class="keyword">this</span> )&#123;</span><br><span class="line">      				privateData[key] = <span class="literal">null</span>;</span><br><span class="line">      				<span class="keyword">delete</span> privateData[key];</span><br><span class="line">      			&#125;</span><br><span class="line">      		&#125;</span><br><span class="line">       &#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//最后返回一个方法，该方法才是直接调用的。</span></span><br><span class="line">       <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"> obj </span>)</span>&#123;</span><br><span class="line">       </span><br><span class="line">       	<span class="keyword">if</span>( <span class="keyword">typeof</span> obj !== <span class="string">'object'</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">               <span class="keyword">if</span>( privateData[key].val === obj )&#123;</span><br><span class="line">                   <span class="keyword">return</span> privateData[key];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           &#125;)(privateData[uid++] = &#123;</span><br><span class="line">           	val : obj,</span><br><span class="line">           	destroy : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           		<span class="keyword">return</span> destroy.call(<span class="keyword">this</span>);</span><br><span class="line">           	&#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码就这么多，我们接下来看下怎么用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//在构造函数之前执行Privatization;赋值给_，相当于我们刚才return的方法。</span></span><br><span class="line"><span class="keyword">var</span> _ = Privatization();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span>; <span class="comment">//公有属性</span></span><br><span class="line">    _(<span class="keyword">this</span>).bonus = <span class="number">20</span>; <span class="comment">//私有属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.method = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log( <span class="keyword">this</span>.salary ); <span class="comment">//16</span></span><br><span class="line">	<span class="built_in">console</span>.log( _(<span class="keyword">this</span>).bonus ); <span class="comment">//20</span></span><br><span class="line">&#125;</span><br><span class="line">Coder.prototype.destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="comment">//由于闭包里面不能自动回收，我们在必要的时候可以手动销毁</span></span><br><span class="line">	_(<span class="keyword">this</span>).destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( f2e.salary ); <span class="comment">//16;</span></span><br><span class="line"><span class="built_in">console</span>.log( f2e.bonus ); <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="测试文章" scheme="https://imochen.com/tags/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[但是经过测试之后发现作者并没有那么讲究]]></title>
    <link href="https://imochen.com/2015/12/20/test%E5%89%AF%E6%9C%AC%205/"/>
    <id>https://imochen.com/2015/12/20/test副本 5/</id>
    <published>2015-12-20T07:33:31.000Z</published>
    <updated>2015-12-21T07:03:15.000Z</updated>
    <content type="html"><![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>为了解决属性能直接被访问的问题，我们可以将变量私有化。私有化方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Privatization</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">//搞个uid作为不同实例化对象的标示，没有什么实际意义，区分之用。</span></span><br><span class="line">       <span class="keyword">var</span> uid = (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()).toString().slice(<span class="number">0</span>,<span class="number">7</span>);</span><br><span class="line">		<span class="comment">//创建一个对象用来存在私有属性/方法等内容。</span></span><br><span class="line">       <span class="keyword">var</span> privateData = &#123;&#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//由于存在于闭包中，需要一个销毁方法。</span></span><br><span class="line">       <span class="keyword">var</span> destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       	<span class="keyword">for</span>( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">      			<span class="keyword">if</span>( privateData[key] === <span class="keyword">this</span> )&#123;</span><br><span class="line">      				privateData[key] = <span class="literal">null</span>;</span><br><span class="line">      				<span class="keyword">delete</span> privateData[key];</span><br><span class="line">      			&#125;</span><br><span class="line">      		&#125;</span><br><span class="line">       &#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//最后返回一个方法，该方法才是直接调用的。</span></span><br><span class="line">       <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"> obj </span>)</span>&#123;</span><br><span class="line">       </span><br><span class="line">       	<span class="keyword">if</span>( <span class="keyword">typeof</span> obj !== <span class="string">'object'</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">               <span class="keyword">if</span>( privateData[key].val === obj )&#123;</span><br><span class="line">                   <span class="keyword">return</span> privateData[key];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           &#125;)(privateData[uid++] = &#123;</span><br><span class="line">           	val : obj,</span><br><span class="line">           	destroy : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           		<span class="keyword">return</span> destroy.call(<span class="keyword">this</span>);</span><br><span class="line">           	&#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码就这么多，我们接下来看下怎么用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//在构造函数之前执行Privatization;赋值给_，相当于我们刚才return的方法。</span></span><br><span class="line"><span class="keyword">var</span> _ = Privatization();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span>; <span class="comment">//公有属性</span></span><br><span class="line">    _(<span class="keyword">this</span>).bonus = <span class="number">20</span>; <span class="comment">//私有属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.method = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log( <span class="keyword">this</span>.salary ); <span class="comment">//16</span></span><br><span class="line">	<span class="built_in">console</span>.log( _(<span class="keyword">this</span>).bonus ); <span class="comment">//20</span></span><br><span class="line">&#125;</span><br><span class="line">Coder.prototype.destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="comment">//由于闭包里面不能自动回收，我们在必要的时候可以手动销毁</span></span><br><span class="line">	_(<span class="keyword">this</span>).destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( f2e.salary ); <span class="comment">//16;</span></span><br><span class="line"><span class="built_in">console</span>.log( f2e.bonus ); <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="测试文章" scheme="https://imochen.com/tags/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[但是经过测试之后发现作者并没有那么讲究]]></title>
    <link href="https://imochen.com/2015/12/20/test%E5%89%AF%E6%9C%AC%204/"/>
    <id>https://imochen.com/2015/12/20/test副本 4/</id>
    <published>2015-12-20T07:33:31.000Z</published>
    <updated>2015-12-21T07:03:15.000Z</updated>
    <content type="html"><![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>为了解决属性能直接被访问的问题，我们可以将变量私有化。私有化方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Privatization</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">//搞个uid作为不同实例化对象的标示，没有什么实际意义，区分之用。</span></span><br><span class="line">       <span class="keyword">var</span> uid = (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()).toString().slice(<span class="number">0</span>,<span class="number">7</span>);</span><br><span class="line">		<span class="comment">//创建一个对象用来存在私有属性/方法等内容。</span></span><br><span class="line">       <span class="keyword">var</span> privateData = &#123;&#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//由于存在于闭包中，需要一个销毁方法。</span></span><br><span class="line">       <span class="keyword">var</span> destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       	<span class="keyword">for</span>( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">      			<span class="keyword">if</span>( privateData[key] === <span class="keyword">this</span> )&#123;</span><br><span class="line">      				privateData[key] = <span class="literal">null</span>;</span><br><span class="line">      				<span class="keyword">delete</span> privateData[key];</span><br><span class="line">      			&#125;</span><br><span class="line">      		&#125;</span><br><span class="line">       &#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//最后返回一个方法，该方法才是直接调用的。</span></span><br><span class="line">       <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"> obj </span>)</span>&#123;</span><br><span class="line">       </span><br><span class="line">       	<span class="keyword">if</span>( <span class="keyword">typeof</span> obj !== <span class="string">'object'</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">               <span class="keyword">if</span>( privateData[key].val === obj )&#123;</span><br><span class="line">                   <span class="keyword">return</span> privateData[key];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           &#125;)(privateData[uid++] = &#123;</span><br><span class="line">           	val : obj,</span><br><span class="line">           	destroy : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           		<span class="keyword">return</span> destroy.call(<span class="keyword">this</span>);</span><br><span class="line">           	&#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码就这么多，我们接下来看下怎么用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//在构造函数之前执行Privatization;赋值给_，相当于我们刚才return的方法。</span></span><br><span class="line"><span class="keyword">var</span> _ = Privatization();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span>; <span class="comment">//公有属性</span></span><br><span class="line">    _(<span class="keyword">this</span>).bonus = <span class="number">20</span>; <span class="comment">//私有属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.method = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log( <span class="keyword">this</span>.salary ); <span class="comment">//16</span></span><br><span class="line">	<span class="built_in">console</span>.log( _(<span class="keyword">this</span>).bonus ); <span class="comment">//20</span></span><br><span class="line">&#125;</span><br><span class="line">Coder.prototype.destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="comment">//由于闭包里面不能自动回收，我们在必要的时候可以手动销毁</span></span><br><span class="line">	_(<span class="keyword">this</span>).destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( f2e.salary ); <span class="comment">//16;</span></span><br><span class="line"><span class="built_in">console</span>.log( f2e.bonus ); <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="测试文章" scheme="https://imochen.com/tags/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[但是经过测试之后发现作者并没有那么讲究]]></title>
    <link href="https://imochen.com/2015/12/20/test%E5%89%AF%E6%9C%AC%203/"/>
    <id>https://imochen.com/2015/12/20/test副本 3/</id>
    <published>2015-12-20T07:33:31.000Z</published>
    <updated>2015-12-21T07:03:15.000Z</updated>
    <content type="html"><![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>为了解决属性能直接被访问的问题，我们可以将变量私有化。私有化方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Privatization</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">//搞个uid作为不同实例化对象的标示，没有什么实际意义，区分之用。</span></span><br><span class="line">       <span class="keyword">var</span> uid = (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()).toString().slice(<span class="number">0</span>,<span class="number">7</span>);</span><br><span class="line">		<span class="comment">//创建一个对象用来存在私有属性/方法等内容。</span></span><br><span class="line">       <span class="keyword">var</span> privateData = &#123;&#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//由于存在于闭包中，需要一个销毁方法。</span></span><br><span class="line">       <span class="keyword">var</span> destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       	<span class="keyword">for</span>( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">      			<span class="keyword">if</span>( privateData[key] === <span class="keyword">this</span> )&#123;</span><br><span class="line">      				privateData[key] = <span class="literal">null</span>;</span><br><span class="line">      				<span class="keyword">delete</span> privateData[key];</span><br><span class="line">      			&#125;</span><br><span class="line">      		&#125;</span><br><span class="line">       &#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//最后返回一个方法，该方法才是直接调用的。</span></span><br><span class="line">       <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"> obj </span>)</span>&#123;</span><br><span class="line">       </span><br><span class="line">       	<span class="keyword">if</span>( <span class="keyword">typeof</span> obj !== <span class="string">'object'</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">               <span class="keyword">if</span>( privateData[key].val === obj )&#123;</span><br><span class="line">                   <span class="keyword">return</span> privateData[key];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           &#125;)(privateData[uid++] = &#123;</span><br><span class="line">           	val : obj,</span><br><span class="line">           	destroy : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           		<span class="keyword">return</span> destroy.call(<span class="keyword">this</span>);</span><br><span class="line">           	&#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码就这么多，我们接下来看下怎么用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//在构造函数之前执行Privatization;赋值给_，相当于我们刚才return的方法。</span></span><br><span class="line"><span class="keyword">var</span> _ = Privatization();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span>; <span class="comment">//公有属性</span></span><br><span class="line">    _(<span class="keyword">this</span>).bonus = <span class="number">20</span>; <span class="comment">//私有属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.method = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log( <span class="keyword">this</span>.salary ); <span class="comment">//16</span></span><br><span class="line">	<span class="built_in">console</span>.log( _(<span class="keyword">this</span>).bonus ); <span class="comment">//20</span></span><br><span class="line">&#125;</span><br><span class="line">Coder.prototype.destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="comment">//由于闭包里面不能自动回收，我们在必要的时候可以手动销毁</span></span><br><span class="line">	_(<span class="keyword">this</span>).destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( f2e.salary ); <span class="comment">//16;</span></span><br><span class="line"><span class="built_in">console</span>.log( f2e.bonus ); <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="测试文章" scheme="https://imochen.com/tags/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[但是经过测试之后发现作者并没有那么讲究]]></title>
    <link href="https://imochen.com/2015/12/20/test%E5%89%AF%E6%9C%AC%202/"/>
    <id>https://imochen.com/2015/12/20/test副本 2/</id>
    <published>2015-12-20T07:33:31.000Z</published>
    <updated>2015-12-21T07:03:15.000Z</updated>
    <content type="html"><![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>为了解决属性能直接被访问的问题，我们可以将变量私有化。私有化方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Privatization</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">//搞个uid作为不同实例化对象的标示，没有什么实际意义，区分之用。</span></span><br><span class="line">       <span class="keyword">var</span> uid = (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()).toString().slice(<span class="number">0</span>,<span class="number">7</span>);</span><br><span class="line">		<span class="comment">//创建一个对象用来存在私有属性/方法等内容。</span></span><br><span class="line">       <span class="keyword">var</span> privateData = &#123;&#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//由于存在于闭包中，需要一个销毁方法。</span></span><br><span class="line">       <span class="keyword">var</span> destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       	<span class="keyword">for</span>( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">      			<span class="keyword">if</span>( privateData[key] === <span class="keyword">this</span> )&#123;</span><br><span class="line">      				privateData[key] = <span class="literal">null</span>;</span><br><span class="line">      				<span class="keyword">delete</span> privateData[key];</span><br><span class="line">      			&#125;</span><br><span class="line">      		&#125;</span><br><span class="line">       &#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//最后返回一个方法，该方法才是直接调用的。</span></span><br><span class="line">       <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"> obj </span>)</span>&#123;</span><br><span class="line">       </span><br><span class="line">       	<span class="keyword">if</span>( <span class="keyword">typeof</span> obj !== <span class="string">'object'</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">               <span class="keyword">if</span>( privateData[key].val === obj )&#123;</span><br><span class="line">                   <span class="keyword">return</span> privateData[key];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           &#125;)(privateData[uid++] = &#123;</span><br><span class="line">           	val : obj,</span><br><span class="line">           	destroy : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           		<span class="keyword">return</span> destroy.call(<span class="keyword">this</span>);</span><br><span class="line">           	&#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码就这么多，我们接下来看下怎么用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//在构造函数之前执行Privatization;赋值给_，相当于我们刚才return的方法。</span></span><br><span class="line"><span class="keyword">var</span> _ = Privatization();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span>; <span class="comment">//公有属性</span></span><br><span class="line">    _(<span class="keyword">this</span>).bonus = <span class="number">20</span>; <span class="comment">//私有属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.method = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log( <span class="keyword">this</span>.salary ); <span class="comment">//16</span></span><br><span class="line">	<span class="built_in">console</span>.log( _(<span class="keyword">this</span>).bonus ); <span class="comment">//20</span></span><br><span class="line">&#125;</span><br><span class="line">Coder.prototype.destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="comment">//由于闭包里面不能自动回收，我们在必要的时候可以手动销毁</span></span><br><span class="line">	_(<span class="keyword">this</span>).destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( f2e.salary ); <span class="comment">//16;</span></span><br><span class="line"><span class="built_in">console</span>.log( f2e.bonus ); <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="测试文章" scheme="https://imochen.com/tags/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[但是经过测试之后发现作者并没有那么讲究]]></title>
    <link href="https://imochen.com/2015/12/20/test%E5%89%AF%E6%9C%AC/"/>
    <id>https://imochen.com/2015/12/20/test副本/</id>
    <published>2015-12-20T07:33:31.000Z</published>
    <updated>2015-12-21T07:03:15.000Z</updated>
    <content type="html"><![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>为了解决属性能直接被访问的问题，我们可以将变量私有化。私有化方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Privatization</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">//搞个uid作为不同实例化对象的标示，没有什么实际意义，区分之用。</span></span><br><span class="line">       <span class="keyword">var</span> uid = (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()).toString().slice(<span class="number">0</span>,<span class="number">7</span>);</span><br><span class="line">		<span class="comment">//创建一个对象用来存在私有属性/方法等内容。</span></span><br><span class="line">       <span class="keyword">var</span> privateData = &#123;&#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//由于存在于闭包中，需要一个销毁方法。</span></span><br><span class="line">       <span class="keyword">var</span> destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       	<span class="keyword">for</span>( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">      			<span class="keyword">if</span>( privateData[key] === <span class="keyword">this</span> )&#123;</span><br><span class="line">      				privateData[key] = <span class="literal">null</span>;</span><br><span class="line">      				<span class="keyword">delete</span> privateData[key];</span><br><span class="line">      			&#125;</span><br><span class="line">      		&#125;</span><br><span class="line">       &#125;;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//最后返回一个方法，该方法才是直接调用的。</span></span><br><span class="line">       <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"> obj </span>)</span>&#123;</span><br><span class="line">       </span><br><span class="line">       	<span class="keyword">if</span>( <span class="keyword">typeof</span> obj !== <span class="string">'object'</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> privateData )&#123;</span><br><span class="line">               <span class="keyword">if</span>( privateData[key].val === obj )&#123;</span><br><span class="line">                   <span class="keyword">return</span> privateData[key];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           &#125;)(privateData[uid++] = &#123;</span><br><span class="line">           	val : obj,</span><br><span class="line">           	destroy : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           		<span class="keyword">return</span> destroy.call(<span class="keyword">this</span>);</span><br><span class="line">           	&#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码就这么多，我们接下来看下怎么用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//在构造函数之前执行Privatization;赋值给_，相当于我们刚才return的方法。</span></span><br><span class="line"><span class="keyword">var</span> _ = Privatization();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span>; <span class="comment">//公有属性</span></span><br><span class="line">    _(<span class="keyword">this</span>).bonus = <span class="number">20</span>; <span class="comment">//私有属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.method = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log( <span class="keyword">this</span>.salary ); <span class="comment">//16</span></span><br><span class="line">	<span class="built_in">console</span>.log( _(<span class="keyword">this</span>).bonus ); <span class="comment">//20</span></span><br><span class="line">&#125;</span><br><span class="line">Coder.prototype.destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="comment">//由于闭包里面不能自动回收，我们在必要的时候可以手动销毁</span></span><br><span class="line">	_(<span class="keyword">this</span>).destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( f2e.salary ); <span class="comment">//16;</span></span><br><span class="line"><span class="built_in">console</span>.log( f2e.bonus ); <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>#沉淀总结_JS中实现私有变量解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个码农正常情况下每个月发16k薪水</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Coder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每加班一次，会补助100块（0.1K）</span></span><br><span class="line">Coder.prototype.overtime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary += <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事故一次，扣除100块（0.1k）</span></span><br><span class="line">Coder.prototype.mistake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary -= <span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Coder.prototype.getSalary = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们来new一个前端工程师</span></span><br><span class="line"><span class="keyword">var</span> f2e = <span class="keyword">new</span> Coder();</span><br><span class="line"></span><br><span class="line"><span class="comment">//辛苦的前端加了一天班</span></span><br><span class="line">f2e.overtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">//老板来了。</span></span><br><span class="line">f2e.salary = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月底发工资了。1次加班，0次事故。嗯，不错！16.1k。</span></span><br><span class="line">f2e.getSalary(); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我艹，我工资呢？</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="测试文章" scheme="https://imochen.com/tags/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo-theme-meizi]]></title>
    <link href="https://imochen.com/2015/12/20/hexo-theme-meizi%E5%89%AF%E6%9C%AC%202/"/>
    <id>https://imochen.com/2015/12/20/hexo-theme-meizi副本 2/</id>
    <published>2015-12-20T03:48:56.000Z</published>
    <updated>2015-12-21T06:57:21.000Z</updated>
    <content type="html"><![CDATA[<p>最初在<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p><a id="more"></a><p>外观上大量借鉴了<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>和<a href="https://imququ.com" target="_blank" rel="external">imququ</a>。</p><p>主题内容方面，以照顾<em>程序员</em>为主，目前仅实现了写作为主的展现方式。</p><p>性能和速度，对比<em>tranquilpeak</em>仅保留了必要的动画，干掉了大量无用的动画和3D加速混乱使用。另外没有引入额外的JS库，主题相关代码只有寥寥数行。</p><p><em>注意：目前还在开发阶段，谨慎使用</em></p>]]></content>
    <summary type="html">
    <![CDATA[<p>最初在<a href="https://hexo.io/themes/">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="https://imochen.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo-theme-meizi]]></title>
    <link href="https://imochen.com/2015/12/20/hexo-theme-meizi%E5%89%AF%E6%9C%AC/"/>
    <id>https://imochen.com/2015/12/20/hexo-theme-meizi副本/</id>
    <published>2015-12-20T03:48:56.000Z</published>
    <updated>2015-12-21T06:57:21.000Z</updated>
    <content type="html"><![CDATA[<p>最初在<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p><a id="more"></a><p>外观上大量借鉴了<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>和<a href="https://imququ.com" target="_blank" rel="external">imququ</a>。</p><p>主题内容方面，以照顾<em>程序员</em>为主，目前仅实现了写作为主的展现方式。</p><p>性能和速度，对比<em>tranquilpeak</em>仅保留了必要的动画，干掉了大量无用的动画和3D加速混乱使用。另外没有引入额外的JS库，主题相关代码只有寥寥数行。</p><p><em>注意：目前还在开发阶段，谨慎使用</em></p>]]></content>
    <summary type="html">
    <![CDATA[<p>最初在<a href="https://hexo.io/themes/">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="https://imochen.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo-theme-meizi]]></title>
    <link href="https://imochen.com/2015/11/20/hexo-theme-meizi%E5%89%AF%E6%9C%AC%203/"/>
    <id>https://imochen.com/2015/11/20/hexo-theme-meizi副本 3/</id>
    <published>2015-11-20T03:48:56.000Z</published>
    <updated>2015-12-21T07:53:46.000Z</updated>
    <content type="html"><![CDATA[<p>最初在<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p><a id="more"></a><p>外观上大量借鉴了<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>和<a href="https://imququ.com" target="_blank" rel="external">imququ</a>。</p><p>主题内容方面，以照顾<em>程序员</em>为主，目前仅实现了写作为主的展现方式。</p><p>性能和速度，对比<em>tranquilpeak</em>仅保留了必要的动画，干掉了大量无用的动画和3D加速混乱使用。另外没有引入额外的JS库，主题相关代码只有寥寥数行。</p><p><em>注意：目前还在开发阶段，谨慎使用</em></p>]]></content>
    <summary type="html">
    <![CDATA[<p>最初在<a href="https://hexo.io/themes/">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="https://imochen.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo-theme-meizi]]></title>
    <link href="https://imochen.com/2015/10/20/hexo-theme-meizi%E5%89%AF%E6%9C%AC%204/"/>
    <id>https://imochen.com/2015/10/20/hexo-theme-meizi副本 4/</id>
    <published>2015-10-20T03:48:56.000Z</published>
    <updated>2015-12-21T07:53:45.000Z</updated>
    <content type="html"><![CDATA[<p>最初在<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p><a id="more"></a><p>外观上大量借鉴了<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>和<a href="https://imququ.com" target="_blank" rel="external">imququ</a>。</p><p>主题内容方面，以照顾<em>程序员</em>为主，目前仅实现了写作为主的展现方式。</p><p>性能和速度，对比<em>tranquilpeak</em>仅保留了必要的动画，干掉了大量无用的动画和3D加速混乱使用。另外没有引入额外的JS库，主题相关代码只有寥寥数行。</p><p><em>注意：目前还在开发阶段，谨慎使用</em></p>]]></content>
    <summary type="html">
    <![CDATA[<p>最初在<a href="https://hexo.io/themes/">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="https://imochen.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo-theme-meizi]]></title>
    <link href="https://imochen.com/2015/09/20/hexo-theme-meizi%E5%89%AF%E6%9C%AC%205/"/>
    <id>https://imochen.com/2015/09/20/hexo-theme-meizi副本 5/</id>
    <published>2015-09-20T03:48:56.000Z</published>
    <updated>2015-12-21T07:53:44.000Z</updated>
    <content type="html"><![CDATA[<p>最初在<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p><a id="more"></a><p>外观上大量借鉴了<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>和<a href="https://imququ.com" target="_blank" rel="external">imququ</a>。</p><p>主题内容方面，以照顾<em>程序员</em>为主，目前仅实现了写作为主的展现方式。</p><p>性能和速度，对比<em>tranquilpeak</em>仅保留了必要的动画，干掉了大量无用的动画和3D加速混乱使用。另外没有引入额外的JS库，主题相关代码只有寥寥数行。</p><p><em>注意：目前还在开发阶段，谨慎使用</em></p>]]></content>
    <summary type="html">
    <![CDATA[<p>最初在<a href="https://hexo.io/themes/">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="https://imochen.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo-theme-meizi]]></title>
    <link href="https://imochen.com/2015/08/20/hexo-theme-meizi/"/>
    <id>https://imochen.com/2015/08/20/hexo-theme-meizi/</id>
    <published>2015-08-20T03:48:56.000Z</published>
    <updated>2015-12-21T07:53:43.000Z</updated>
    <content type="html"><![CDATA[<p>最初在<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p><a id="more"></a><p>外观上大量借鉴了<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="external">tranquilpeak</a>和<a href="https://imququ.com" target="_blank" rel="external">imququ</a>。</p><p>主题内容方面，以照顾<em>程序员</em>为主，目前仅实现了写作为主的展现方式。</p><p>性能和速度，对比<em>tranquilpeak</em>仅保留了必要的动画，干掉了大量无用的动画和3D加速混乱使用。另外没有引入额外的JS库，主题相关代码只有寥寥数行。</p><p><em>注意：目前还在开发阶段，谨慎使用</em></p>]]></content>
    <summary type="html">
    <![CDATA[<p>最初在<a href="https://hexo.io/themes/">hexo.io</a>看到<a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak">tranquilpeak</a>这个主题。但是经过测试之后发现作者并没有那么讲究，有很多显而易见的BUG，移动端几乎没做任何优化。</p><p>所以就有了<code>hexo-theme-meizi</code>这个主题。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="https://imochen.com/tags/hexo/"/>
    
  </entry>
  
</feed>
